#!/usr/bin/env python

import sys
import os
import requests
import string
import random
import pipes
from xml.etree import ElementTree
if sys.argv[1] == "-U":
  this=os.path.realpath(__file__)
  release=requests.get("https://api.github.com/repos/iggyvolz/korra-dl/releases")
  asset=requests.get(release.json()[0]["assets_url"])
  url=asset.json()[0]["browser_download_url"]
  version=release.json()[0]["tag_name"]
  os.system("curl -L "+pipes.quote(url)+">"+pipes.quote(this))
  sys.exit("Updated to newest version, "+version)
if int(sys.argv[1]) == 110 or int(sys.argv[1]) == 203:
  sys.exit("ERROR: Episodes 110 \"Turning the Tides\" and 203 \"Civil Wars, Part 1\" are disabled.")
if int(sys.argv[2])>7:
  sys.exit ("ERROR: Invalid output type.  Use types 1-7, see https://github.com/iggyvolz/korra-dl/wiki/Output-Types for details")
episodehash={;}.get(int(sys.argv[1]),None)
if episodehash is None:
  sys.exit("ERROR: Invalid episode number.  Episode numbers should be in the following format: Season number (1-3) followed by episode number (01-14)")
r=requests.get("http://udat.mtvnservices.com/service1/dispatch.htm?feed=nick_arc_player_prime&plugin.stage=live&mgid=mgid:arc:episode:nick.com:"+episodehash)
text=r.text.replace(u'\u2019',"'")
randomstring=''.join(random.choice(string.ascii_uppercase + string.digits) for _ in range(10))
if os.name == "nt":
  os.system('mkdir %TEMP%\\korra-dl')
else:
  os.system('mkdir /tmp/korra-dl')
for (i,item) in enumerate(ElementTree.XML(text)[0].findall("item")):
  s=requests.get(item[4][0].get("url"))
  url=ElementTree.XML(s.text)[0][0][int(sys.argv[2])-1][0].text
  if os.name == "nt":
    os.system("ffmpeg -i "+url+" %TEMP%\\korra-dl\\"+randomstring+"_"+str(i)+".mp4")
    os.system('echo file \'%TEMP%\\korra-dl\\'+randomstring+'_'+str(i)+'.mp4\'>>%TEMP%\\korra-dl-'+randomstring+'_cache')
  else:
    os.system("ffmpeg -i "+url+" /tmp/korra-dl/"+randomstring+"_"+str(i)+".mp4")
    os.system('echo "file \'/tmp/korra-dl/'+randomstring+'_'+str(i)+'.mp4\'">>/tmp/korra-dl-'+randomstring+'_cache')
if os.name == "nt":
  os.system('ffmpeg -f concat -i %TEMP%\\korra-dl\\'+randomstring+'_cache -c copy '+sys.argv[3])
  os.system('del %TEMP%\\korra-dl && rmdir %TEMP%\\korra-dl')
else:
  os.system('ffmpeg -f concat -i /tmp/korra-dl/'+randomstring+'_cache -c copy '+sys.argv[3])
  os.system('rm -R /tmp/korra-dl')
